{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport Board from '../components/board/Board';\nimport axios from 'axios';\nimport BottomBar from '../components/BottomBar/BottomBar';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    const fetchBoards = async () => {\n      const boards = await axios.get('/boards');\n      setBoards(boards.data);\n    };\n\n    fetchBoards();\n  }, []);\n\n  const handleOnDragEnd = async result => {\n    console.log(result);\n    if (!result.destination) return;\n\n    if (result.source.droppableId !== result.destination.droppableId) {\n      // const source = test.find(column => column.id == result.source.droppableId)\n      // const dest = test.find(column => column.id == result.destination.droppableId)\n      // const [removed] = source.data.splice(result.source.index, 1)\n      // dest.data.splice(result.destination.index, 0, removed)\n      // console.log(removed, dest, test[1])\n      console.log('dupa');\n    } else {\n      // const source = test\n      // const [reorderedItem] = source.splice(result.source.index, 1)\n      // source.splice(result.destination.index, 0, reorderedItem)\n      // setBoard({\n      //     ...board, content: source\n      // })\n      const board = boards.find(board => board._id == result.source.droppableId);\n      const source = board.content;\n      const [reorderedItem] = source.splice(result.source.index, 1);\n      source.splice(result.destination.index, 0, reorderedItem);\n      const newArray = boards.map(item => {\n        if (board._id !== item._id) {\n          return item;\n        } else {\n          return { ...item,\n            content: source\n          };\n        }\n      });\n      setBoards(newArray);\n      console.log(boards);\n    }\n  };\n\n  const renderBoards = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boards__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleOnDragEnd,\n        children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n          boards: boards,\n          setBoards: setBoards,\n          board: board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [renderBoards(), /*#__PURE__*/_jsxDEV(BottomBar, {\n      boards: boards,\n      setBoards: setBoards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/pages/Home.js"],"names":["React","useState","useEffect","Board","axios","BottomBar","DragDropContext","Home","boards","setBoards","fetchBoards","get","data","handleOnDragEnd","result","console","log","destination","source","droppableId","board","find","_id","content","reorderedItem","splice","index","newArray","map","item","renderBoards"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Home.css'\r\nimport Board from '../components/board/Board'\r\nimport axios from 'axios'\r\nimport BottomBar from '../components/BottomBar/BottomBar'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\n\r\nfunction Home() {\r\n    const [boards, setBoards] = useState([])\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        const fetchBoards = async () => {\r\n            const boards = await axios.get('/boards')\r\n            setBoards(boards.data)\r\n        }\r\n        fetchBoards()\r\n    }, [])\r\n\r\n    \r\n\r\n    const handleOnDragEnd =  async (result) => {\r\n        console.log(result)\r\n\r\n        if (!result.destination) return;\r\n        \r\n        if (result.source.droppableId !== result.destination.droppableId) {\r\n            // const source = test.find(column => column.id == result.source.droppableId)\r\n            // const dest = test.find(column => column.id == result.destination.droppableId)\r\n            // const [removed] = source.data.splice(result.source.index, 1)\r\n            // dest.data.splice(result.destination.index, 0, removed)\r\n            // console.log(removed, dest, test[1])\r\n            console.log('dupa')\r\n        }\r\n\r\n        else {\r\n            // const source = test\r\n            // const [reorderedItem] = source.splice(result.source.index, 1)\r\n            // source.splice(result.destination.index, 0, reorderedItem)\r\n            // setBoard({\r\n            //     ...board, content: source\r\n            // })\r\n\r\n\r\n            const board = boards.find(board => board._id == result.source.droppableId)\r\n            const source = board.content\r\n            const [reorderedItem] = source.splice(result.source.index, 1)\r\n            source.splice(result.destination.index, 0, reorderedItem)\r\n            const newArray = boards.map( item => {\r\n                if(board._id !== item._id) {return item}\r\n                else{ return {...item, content : source} }\r\n            }  )\r\n\r\n            setBoards(newArray)\r\n            console.log(boards)\r\n        }\r\n    }\r\n\r\n\r\n    const renderBoards = () => {\r\n        return <div className = 'boards__wrapper'>\r\n            <DragDropContext onDragEnd = {handleOnDragEnd}>\r\n                {boards.map(board => <Board boards = {boards} setBoards = {setBoards} board = {board}/>)}\r\n            </DragDropContext>\r\n        </div>\r\n            \r\n        \r\n    }\r\n\r\n    return (\r\n        <div className = 'home'>\r\n            {renderBoards()}\r\n            <BottomBar boards = {boards} setBoards = {setBoards} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}