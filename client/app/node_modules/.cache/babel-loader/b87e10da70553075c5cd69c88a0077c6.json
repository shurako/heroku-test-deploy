{"ast":null,"code":"import _objectSpread from\"C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Droppable,DragDropContext,Draggable}from'react-beautiful-dnd';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Test(){var _useState7;var data1=[{id:'1',data:1},{id:'2',data:2},{id:'7',data:3},{id:'10',data:10}];var data2=[{id:'4',data:4},{id:'5',data:5},{id:'6',data:6}];var _useState=useState(data1),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(data2),_useState4=_slicedToArray(_useState3,2),dataa=_useState4[0],setDataa=_useState4[1];var _useState5=useState((_useState7={},_defineProperty(_useState7,'1',{data:data1}),_defineProperty(_useState7,'2',{data:data2}),_useState7)),_useState6=_slicedToArray(_useState5,2),columns=_useState6[0],setColumns=_useState6[1];var _useState8=useState([{id:'100',data:data1},{id:'200',data:data2}]),_useState9=_slicedToArray(_useState8,2),test=_useState9[0],setTest=_useState9[1];var handleOnDragEnd=function handleOnDragEnd(result){console.log(result);if(!result.destination)return;if(result.source.draggableId!==result.destination.droppableId){var source=test.find(function(column){return column.id==result.source.droppableId;});var dest=test.find(function(column){return column.id==result.destination.droppableId;});var _source$data$splice=source.data.splice(result.source.index,1),_source$data$splice2=_slicedToArray(_source$data$splice,1),removed=_source$data$splice2[0];dest.data.splice(result.destination.index,0,removed);console.log(removed,dest,test[1]);}else{var _source=test.find(function(column){return column.id==result.source.droppableId;});var _source$data$splice3=_source.data.splice(result.source.index,1),_source$data$splice4=_slicedToArray(_source$data$splice3,1),reorderedItem=_source$data$splice4[0];_source.data.splice(result.destination.index,0,reorderedItem);}};return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex'},children:/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:handleOnDragEnd,children:test.map(function(column){return/*#__PURE__*/_jsx(Droppable,{droppableId:column.id,children:function children(provided){return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},provided.droppableProps),{},{ref:provided.innerRef,children:[column.data.map(function(item,index){return/*#__PURE__*/_jsx(Draggable,{draggableId:item.id,index:index,children:function children(provided){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({className:\"test\"},provided.dragHandleProps),provided.draggableProps),{},{ref:provided.innerRef,children:item.data}));}},item.id);}),provided.placeholder]}));}},column.id);})})});}export default Test;// return items.map((item, index) => (\n//     <Draggable\n//       // adding a key is important!\n//       key={item.id}\n//       draggableId={item.id}\n//       index={index}\n//     >\n//       {(provided, snapshot) => (\n//         <div\n//           ref={provided.innerRef}\n//           {...provided.draggableProps}\n//           {...provided.dragHandleProps}\n//         >\n//           {item.content}\n//         </div>\n//       )}\n//     </Draggable>\n//   ));","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/pages/Test.js"],"names":["React","useState","Droppable","DragDropContext","Draggable","Test","data1","id","data","data2","setData","dataa","setDataa","columns","setColumns","test","setTest","handleOnDragEnd","result","console","log","destination","source","draggableId","droppableId","find","column","dest","splice","index","removed","reorderedItem","display","map","provided","droppableProps","innerRef","item","dragHandleProps","draggableProps","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Droppable, DragDropContext, Draggable } from 'react-beautiful-dnd'\r\nfunction Test() {\r\n\r\n    const data1 = [\r\n        { id: '1', data: 1 },\r\n        { id: '2', data: 2 },\r\n        { id: '7', data: 3 },\r\n        { id: '10', data: 10 },\r\n    ]\r\n    const data2 = [\r\n        { id: '4', data: 4 },\r\n        { id: '5', data: 5 },\r\n        { id: '6', data: 6 }\r\n    ]\r\n\r\n    const [data, setData] = useState(data1)\r\n    const [dataa, setDataa] = useState(data2)\r\n\r\n    const [columns, setColumns] = useState({\r\n        ['1'] : {\r\n            data: data1\r\n        },\r\n        ['2'] : {\r\n            data: data2\r\n        }\r\n    })\r\n\r\nconst [test, setTest] = useState([\r\n    {   id: '100',\r\n        data : data1},\r\n    {   id: '200',\r\n        data: data2}\r\n])\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        console.log(result  )\r\n        \r\n\r\n        if(!result.destination) return;\r\n        if(result.source.draggableId !== result.destination.droppableId){\r\n            const source = test.find( column => column.id == result.source.droppableId )\r\n            const dest = test.find( column => column.id == result.destination.droppableId )\r\n            const [removed] = source.data.splice(result.source.index, 1)\r\n            dest.data.splice(result.destination.index, 0, removed )\r\n            console.log(removed, dest, test[1])\r\n\r\n            \r\n            \r\n            \r\n        }\r\n\r\n        else{\r\n            const source = test.find( column => column.id == result.source.droppableId )\r\n\r\n            const [reorderedItem ] = source.data.splice(result.source.index, 1)\r\n            source.data.splice(result.destination.index, 0, reorderedItem)\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <div style = {{display: 'flex'}}>\r\n            <DragDropContext onDragEnd={handleOnDragEnd} >\r\n               {test.map(column => <Droppable key ={column.id} droppableId = {column.id}>\r\n                   {provided => (\r\n                       <div\r\n                        {...provided.droppableProps}\r\n                        ref ={provided.innerRef}\r\n                       >\r\n                           {column.data.map((item, index) => <Draggable key = {item.id } draggableId = {item.id} index = {index}> \r\n                                {provided => (\r\n                                    <div className = 'test' {...provided.dragHandleProps} {...provided.draggableProps} ref = {provided.innerRef} >\r\n                                    {item.data}\r\n                                </div>\r\n                                )}\r\n                           </Draggable>)}\r\n                           {provided.placeholder}\r\n                       </div>\r\n                       \r\n                   )}\r\n               </Droppable>) }\r\n     \r\n                \r\n            </DragDropContext>\r\n\r\n            \r\n\r\n                        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n\r\n// return items.map((item, index) => (\r\n//     <Draggable\r\n//       // adding a key is important!\r\n//       key={item.id}\r\n//       draggableId={item.id}\r\n//       index={index}\r\n//     >\r\n//       {(provided, snapshot) => (\r\n//         <div\r\n//           ref={provided.innerRef}\r\n//           {...provided.draggableProps}\r\n//           {...provided.dragHandleProps}\r\n//         >\r\n//           {item.content}\r\n//         </div>\r\n//       )}\r\n//     </Draggable>\r\n//   ));\r\n\r\n"]},"metadata":{},"sourceType":"module"}