{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\components\\\\Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Note.css';\nimport axios from 'axios';\nimport NoteDetails from './NoteDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Note(props) {\n  _s();\n\n  const {\n    _id,\n    title,\n    description\n  } = props.note;\n  const [note, setNote] = useState();\n  const [showDetails, setShowDetails] = useState(false);\n  const [noteDesc, setNoteDesc] = useState();\n  useEffect(() => {\n    setNote(props.note);\n    setNoteDesc(props.note.description);\n  }, []);\n  useEffect(() => {\n    const patchNote = async () => {\n      const notes = await axios.get(`boards/${props.boardId}`);\n      const updatedNotes = notes.data.content.filter(data => {\n        if (data._id !== _id) {\n          return note;\n        } else {\n          setNote(note);\n          return note;\n        }\n      });\n      axios.patch(`/boards/createNote/${props.boardId}`, {\n        content: updatedNotes\n      });\n      console.log('1');\n    };\n\n    patchNote();\n  }, [note]);\n\n  const handleShowDetails = () => {\n    if (showDetails === true) return /*#__PURE__*/_jsxDEV(NoteDetails, {\n      noteDesc: noteDesc,\n      setNoteDesc: setNoteDesc,\n      handlePatchDescription: handlePatchDescription,\n      boardId: props.boardId,\n      showDetails: showDetails,\n      setShowDetails: setShowDetails,\n      boardTitle: props.boardTitle,\n      note: props.note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }, this);\n  };\n\n  const handlePatchDescription = async e => {\n    e.preventDefault();\n    const notes = await axios.get(`boards/${props.boardId}`);\n    const updatedNotes = notes.data.content.filter(item => {\n      if (item._id !== note._id) {\n        return item;\n      } else {\n        const newObj = { ...note,\n          description: noteDesc\n        };\n        setNote(newObj);\n        return note;\n      }\n    }); // axios.patch(`/boards/createNote/${props.boardId}`, {content : updatedNotes})\n    // console.log(updatedNotes)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setShowDetails(!showDetails),\n      className: \"note__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.deleteNote(_id);\n        },\n        children: \" delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), showDetails ? handleShowDetails() : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Note, \"D2grB+IB2oagJip86PsgcwSfhtE=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/components/Note.js"],"names":["React","useState","useEffect","axios","NoteDetails","Note","props","_id","title","description","note","setNote","showDetails","setShowDetails","noteDesc","setNoteDesc","patchNote","notes","get","boardId","updatedNotes","data","content","filter","patch","console","log","handleShowDetails","handlePatchDescription","boardTitle","e","preventDefault","item","newObj","deleteNote"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Note.css'\r\nimport axios from 'axios'\r\nimport NoteDetails from './NoteDetails'\r\n\r\n\r\nfunction Note(props) {\r\n    const {_id, title, description } = props.note\r\n    const [note, setNote] = useState()\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [noteDesc, setNoteDesc] = useState()\r\n\r\n    useEffect(() => {\r\n        setNote(props.note);\r\n        setNoteDesc(props.note.description)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const patchNote = async () => {\r\n            const notes = await axios.get(`boards/${props.boardId}`)\r\n            const updatedNotes = notes.data.content.filter( data => {\r\n                if(data._id !== _id) { return note}\r\n                else { setNote(note); return note }     \r\n            } )\r\n            axios.patch(`/boards/createNote/${props.boardId}`, {content : updatedNotes})\r\n            console.log('1')\r\n        }\r\n\r\n        patchNote()\r\n    }, [note] )\r\n\r\n    const  handleShowDetails = () => {\r\n        if(showDetails === true) return <NoteDetails noteDesc ={noteDesc} setNoteDesc = {setNoteDesc} handlePatchDescription = {handlePatchDescription} boardId = {props.boardId} showDetails = {showDetails} setShowDetails = {setShowDetails} boardTitle = {props.boardTitle} note = {props.note} />\r\n    }\r\n\r\n\r\n\r\n\r\n    const handlePatchDescription = async (e) => {\r\n        e.preventDefault()\r\n        const notes = await axios.get(`boards/${props.boardId}`)\r\n        const updatedNotes = notes.data.content.filter( item => {\r\n            if(item._id !== note._id) { return item}\r\n            else { const newObj = {...note, description : noteDesc}; setNote(newObj); return note }\r\n        } )\r\n        // axios.patch(`/boards/createNote/${props.boardId}`, {content : updatedNotes})\r\n        // console.log(updatedNotes)\r\n    }\r\n   \r\n\r\n\r\n    return (\r\n        <div className = 'note'>\r\n            <div onClick = {() => setShowDetails(!showDetails)}  className = 'note__content'>\r\n                <input value = {title} />\r\n                <button onClick = {() => {props.deleteNote(_id)}} > delete</button>\r\n            </div>\r\n\r\n            {showDetails ? handleShowDetails() : ''}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n"]},"metadata":{},"sourceType":"module"}