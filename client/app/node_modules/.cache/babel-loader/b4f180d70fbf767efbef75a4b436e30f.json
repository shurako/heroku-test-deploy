{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\components\\\\board\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Note from '../Note';\nimport './board.css';\nimport axios from 'axios';\nimport { BsPlus } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const {\n    _id,\n    title,\n    content\n  } = props.board;\n  const [notes, setNotes] = useState([]);\n  const [boardTitle, setBoardTitle] = useState(title);\n  const [noteTitle, setNoteTitle] = useState();\n  const [test, setTest] = useState(content);\n\n  const createNote = async () => {\n    axios.post('/notes', {\n      title: noteTitle\n    }).then(data => {\n      data && axios.patch(`/boards/createNote/${_id}`, {\n        content: [...test, data.data]\n      });\n      setTest([...test, data.data]);\n    });\n  };\n\n  const deleteNote = async id => {\n    const filteredNotes = test.filter(note => note._id !== id);\n    await axios.patch(`/boards/createNote/${_id}`, {\n      content: filteredNotes\n    });\n    setTest(filteredNotes);\n  };\n\n  const patchBoardTitle = async () => {\n    await axios.patch(`/boards/updateTitle/${_id}`, {\n      title: boardTitle\n    });\n  };\n\n  const handleAddNote = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-card__form\",\n        children: [/*#__PURE__*/_jsxDEV(BsPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add-card__input\",\n          placeholder: 'add card',\n          onChange: e => setNoteTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNote,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderNotes = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: test && test.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        deleteNote: deleteNote,\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardInput\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setBoardTitle(e.target.value);\n        },\n        value: boardTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), renderNotes(), handleAddNote()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"TyrkbsjLfTa36bJmXPOrab3163Q=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/components/board/Board.js"],"names":["React","useState","useEffect","Note","axios","BsPlus","Board","props","_id","title","content","board","notes","setNotes","boardTitle","setBoardTitle","noteTitle","setNoteTitle","test","setTest","createNote","post","then","data","patch","deleteNote","id","filteredNotes","filter","note","patchBoardTitle","handleAddNote","e","target","value","renderNotes","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Note from '../Note'\r\nimport './board.css'\r\nimport axios from 'axios'\r\nimport {BsPlus} from 'react-icons/bs'\r\n\r\nfunction Board(props) {\r\n    const { _id, title, content } = props.board\r\n\r\n    const [notes, setNotes] = useState([])\r\n    const [boardTitle, setBoardTitle] = useState(title)\r\n    const [noteTitle, setNoteTitle] = useState()\r\n    const [test, setTest] = useState(content)\r\n\r\n\r\n    const createNote = async () => {\r\n        axios.post('/notes', { title: noteTitle })\r\n            .then(data => { data && axios.patch(`/boards/createNote/${_id}`, { content: [...test, data.data] }); setTest([...test, data.data]) })\r\n\r\n\r\n    }\r\n\r\n    const deleteNote = async (id) => {\r\n        const filteredNotes = test.filter(note => note._id !== id)\r\n        await axios.patch(`/boards/createNote/${_id}`, { content: filteredNotes })\r\n        setTest(filteredNotes)\r\n    }\r\n\r\n    const patchBoardTitle = async () => {\r\n        await axios.patch(`/boards/updateTitle/${_id}`, {title: boardTitle})\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddNote = () => {\r\n        return (\r\n            <div>\r\n                \r\n                <form className = 'add-card__form'>\r\n                <BsPlus/>\r\n                    <input className = 'add-card__input'  placeholder = {'add card'} onChange={e => setNoteTitle(e.target.value)} />\r\n                    <button onClick={createNote} >add</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const renderNotes = () => {\r\n        return (\r\n            <div>\r\n                {test && test.map(note => <Note deleteNote={deleteNote} note={note} />)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='board' >\r\n            <div className = 'boardInput'>\r\n                <input   onChange = {(e) => {setBoardTitle(e.target.value)}} value = {boardTitle} />\r\n            </div>\r\n            {renderNotes()}\r\n            {handleAddNote()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n"]},"metadata":{},"sourceType":"module"}