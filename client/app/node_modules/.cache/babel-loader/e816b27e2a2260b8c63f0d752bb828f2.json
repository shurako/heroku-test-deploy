{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\pages\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Droppable, DragDropContext, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const data1 = [{\n    id: '1',\n    data: 1\n  }, {\n    id: '2',\n    data: 2\n  }, {\n    id: '3',\n    data: 3\n  }];\n  const data2 = [{\n    id: '4',\n    data: 4\n  }, {\n    id: '5',\n    data: 5\n  }, {\n    id: '6',\n    data: 6\n  }];\n  const [data, setData] = useState(data1);\n  const [dataa, setDataa] = useState(data2);\n  const [columns, setColumns] = useState([{\n    data: [{\n      id: '1',\n      data: 1\n    }, {\n      id: '2',\n      data: 2\n    }, {\n      id: '3',\n      data: 3\n    }]\n  }]);\n\n  const handleOnDragEnd = result => {\n    console.log(result);\n    if (!result.destination) return;\n\n    if (result.source.draggableId !== result.destination.droppableId) {\n      const source = columns.find(column => {\n        column.data.find(item => {\n          console.log(item.id, result.draggableId);\n        });\n      });\n      console.log(source);\n    }\n\n    const items = data;\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setData(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"characters\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [data.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: i,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", { ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ref: provided.innerRef,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: '50px',\n                    width: '50px'\n                  },\n                  children: item.data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 133\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"characters1\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [dataa.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: i,\n              children: provided => /*#__PURE__*/_jsxDEV(\"li\", { ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ref: provided.innerRef,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: '50px',\n                    width: '50px'\n                  },\n                  children: item.data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 133\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this);\n          }), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"t1f9+APHb8qX842fP5OP8PLJ0vU=\");\n\n_c = Test;\nexport default Test; // return items.map((item, index) => (\n//     <Draggable\n//       // adding a key is important!\n//       key={item.id}\n//       draggableId={item.id}\n//       index={index}\n//     >\n//       {(provided, snapshot) => (\n//         <div\n//           ref={provided.innerRef}\n//           {...provided.draggableProps}\n//           {...provided.dragHandleProps}\n//         >\n//           {item.content}\n//         </div>\n//       )}\n//     </Draggable>\n//   ));\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/pages/Test.js"],"names":["React","useState","Droppable","DragDropContext","Draggable","Test","data1","id","data","data2","setData","dataa","setDataa","columns","setColumns","handleOnDragEnd","result","console","log","destination","source","draggableId","droppableId","find","column","item","items","reorderedItem","splice","index","provided","droppableProps","innerRef","map","i","draggableProps","dragHandleProps","height","width","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Droppable, DragDropContext, Draggable } from 'react-beautiful-dnd'\r\nfunction Test() {\r\n\r\n    const data1 = [\r\n        { id: '1', data: 1 },\r\n        { id: '2', data: 2 },\r\n        { id: '3', data: 3 }\r\n    ]\r\n    const data2 = [\r\n        { id: '4', data: 4 },\r\n        { id: '5', data: 5 },\r\n        { id: '6', data: 6 }\r\n    ]\r\n\r\n    const [data, setData] = useState(data1)\r\n    const [dataa, setDataa] = useState(data2)\r\n\r\n    const [columns, setColumns] = useState([\r\n        {\r\n            data : [\r\n                { id: '1', data: 1 },\r\n                { id: '2', data: 2 },\r\n                { id: '3', data: 3 }\r\n            ]\r\n        }\r\n    ])\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        console.log(result  )\r\n        if(!result.destination) return;\r\n        if(result.source.draggableId !== result.destination.droppableId){\r\n            const source = columns.find( column => {column.data.find(item => {console.log(item.id, result.draggableId)})} )\r\n           console.log(source)\r\n            \r\n        }\r\n\r\n        const items = data;\r\n        const [reorderedItem ] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n\r\n        setData(items)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={handleOnDragEnd} >\r\n                <Droppable droppableId=\"characters\">\r\n                 {(provided) => (\r\n                    \r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} >\r\n                            {data.map((item, i) => {\r\n                                return (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={i}>\r\n                                        {(provided) => (\r\n                                            <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} ><div style={{ height: '50px', width: '50px' }} >{item.data}</div></li>\r\n                                        )}\r\n                                    </Draggable>)\r\n                            }\r\n                            )}\r\n                            {provided.placeholder}\r\n                        </ul>\r\n\r\n                        \r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"characters1\">\r\n                 {(provided) => (\r\n                    \r\n                        <ul  {...provided.droppableProps} ref={provided.innerRef} >\r\n                            {dataa.map((item, i) => {\r\n                                return (\r\n                                    <Draggable key={item.id} draggableId={item.id} index={i}>\r\n                                        {(provided) => (\r\n                                            <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} ><div style={{ height: '50px', width: '50px' }} >{item.data}</div></li>\r\n                                        )}\r\n                                    </Draggable>)\r\n                            }\r\n                            )}\r\n                            {provided.placeholder}\r\n                        </ul>\r\n\r\n                        \r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n\r\n            \r\n\r\n                        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n\r\n// return items.map((item, index) => (\r\n//     <Draggable\r\n//       // adding a key is important!\r\n//       key={item.id}\r\n//       draggableId={item.id}\r\n//       index={index}\r\n//     >\r\n//       {(provided, snapshot) => (\r\n//         <div\r\n//           ref={provided.innerRef}\r\n//           {...provided.draggableProps}\r\n//           {...provided.dragHandleProps}\r\n//         >\r\n//           {item.content}\r\n//         </div>\r\n//       )}\r\n//     </Draggable>\r\n//   ));\r\n\r\n"]},"metadata":{},"sourceType":"module"}