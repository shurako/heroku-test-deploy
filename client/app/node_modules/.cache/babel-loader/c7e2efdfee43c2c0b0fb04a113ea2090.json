{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\pages\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Droppable, DragDropContext, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const data1 = [{\n    id: '1',\n    data: 1\n  }, {\n    id: '2',\n    data: 2\n  }, {\n    id: '3',\n    data: 3\n  }];\n  const data2 = [{\n    id: '4',\n    data: 4\n  }, {\n    id: '5',\n    data: 5\n  }, {\n    id: '6',\n    data: 6\n  }];\n  const [data, setData] = useState(data1);\n  const [dataa, setDataa] = useState(data2);\n  const [columns, setColumns] = useState({\n    ['1']: {\n      data: data1\n    },\n    ['2']: {\n      data: data2\n    }\n  });\n  const [test, setTest] = useState([{\n    id: '1',\n    data: data1\n  }, {\n    id: '2',\n    data: data2\n  }]);\n\n  const handleOnDragEnd = result => {\n    console.log(result);\n    if (!result.destination) return;\n\n    if (result.source.draggableId !== result.destination.droppableId) {}\n\n    const items = data;\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setData(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: test.map(column => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: column.id,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: column.data.map(item => /*#__PURE__*/_jsxDEV(Draggable, {\n            droppableId: item.id,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.dragHandleProps,\n              ...provided.draggableProps,\n              ref: provided.innerRef,\n              children: item.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 53\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this)\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"bPjIooCtV7fsftshlXu/osvcP3A=\");\n\n_c = Test;\nexport default Test; // return items.map((item, index) => (\n//     <Draggable\n//       // adding a key is important!\n//       key={item.id}\n//       draggableId={item.id}\n//       index={index}\n//     >\n//       {(provided, snapshot) => (\n//         <div\n//           ref={provided.innerRef}\n//           {...provided.draggableProps}\n//           {...provided.dragHandleProps}\n//         >\n//           {item.content}\n//         </div>\n//       )}\n//     </Draggable>\n//   ));\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/pages/Test.js"],"names":["React","useState","Droppable","DragDropContext","Draggable","Test","data1","id","data","data2","setData","dataa","setDataa","columns","setColumns","test","setTest","handleOnDragEnd","result","console","log","destination","source","draggableId","droppableId","items","reorderedItem","splice","index","map","column","provided","droppableProps","innerRef","item","dragHandleProps","draggableProps"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Droppable, DragDropContext, Draggable } from 'react-beautiful-dnd'\r\nfunction Test() {\r\n\r\n    const data1 = [\r\n        { id: '1', data: 1 },\r\n        { id: '2', data: 2 },\r\n        { id: '3', data: 3 }\r\n    ]\r\n    const data2 = [\r\n        { id: '4', data: 4 },\r\n        { id: '5', data: 5 },\r\n        { id: '6', data: 6 }\r\n    ]\r\n\r\n    const [data, setData] = useState(data1)\r\n    const [dataa, setDataa] = useState(data2)\r\n\r\n    const [columns, setColumns] = useState({\r\n        ['1'] : {\r\n            data: data1\r\n        },\r\n        ['2'] : {\r\n            data: data2\r\n        }\r\n    })\r\n\r\nconst [test, setTest] = useState([\r\n    {   id: '1',\r\n        data : data1},\r\n    {   id: '2',\r\n        data: data2}\r\n])\r\n\r\n    const handleOnDragEnd = (result) => {\r\n        console.log(result  )\r\n        if(!result.destination) return;\r\n        if(result.source.draggableId !== result.destination.droppableId){\r\n\r\n\r\n        }\r\n\r\n        const items = data;\r\n        const [reorderedItem ] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n\r\n        setData(items)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={handleOnDragEnd} >\r\n               {test.map(column => <Droppable key ={column.id} droppableId = {column.id}>\r\n                   {provided => (\r\n                       <div\r\n                        {...provided.droppableProps}\r\n                        ref ={provided.innerRef}\r\n                       >\r\n                           {column.data.map(item => <Draggable key = {item.id } droppableId = {item.id}> \r\n                                {provided => (\r\n                                    <div {...provided.dragHandleProps} {...provided.draggableProps} ref = {provided.innerRef} >\r\n                                    {item.data}\r\n                                </div>\r\n                                )}\r\n                           </Draggable>)}\r\n                       </div>\r\n                   )}\r\n               </Droppable>) }\r\n     \r\n                \r\n            </DragDropContext>\r\n\r\n            \r\n\r\n                        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n\r\n// return items.map((item, index) => (\r\n//     <Draggable\r\n//       // adding a key is important!\r\n//       key={item.id}\r\n//       draggableId={item.id}\r\n//       index={index}\r\n//     >\r\n//       {(provided, snapshot) => (\r\n//         <div\r\n//           ref={provided.innerRef}\r\n//           {...provided.draggableProps}\r\n//           {...provided.dragHandleProps}\r\n//         >\r\n//           {item.content}\r\n//         </div>\r\n//       )}\r\n//     </Draggable>\r\n//   ));\r\n\r\n"]},"metadata":{},"sourceType":"module"}