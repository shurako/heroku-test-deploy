{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\components\\\\board\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Note from '../Note';\nimport './board.css';\nimport axios from 'axios';\nimport { BsPlus } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const {\n    _id,\n    title,\n    content\n  } = props.board;\n  const [boardTitle, setBoardTitle] = useState(title);\n  const [noteTitle, setNoteTitle] = useState();\n  const [test, setTest] = useState();\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const notes = await axios.get(`/boards/${_id}`);\n      setTest(notes.data.content);\n    };\n\n    fetchNotes();\n  }, []);\n\n  const createNote = async () => {\n    const newNote = await axios.post('/notes', {\n      title: boardTitle\n    });\n    await axios.patch(`/boards/createNote/${_id}`, {\n      content: [...test, newNote.data]\n    });\n  };\n\n  const deleteNote = async id => {\n    const filteredNotes = test.filter(note => note._id !== id);\n    await axios.patch(`/boards/createNote/${_id}`, {\n      content: filteredNotes\n    });\n    setTest(filteredNotes);\n  };\n\n  const patchBoardTitle = async () => {\n    await axios.patch(`/boards/updateTitle/${_id}`, {\n      title: boardTitle\n    });\n  };\n\n  const handleAddNote = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-card__form\",\n        children: [/*#__PURE__*/_jsxDEV(BsPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add-card__input\",\n          placeholder: 'add card',\n          onChange: e => setNoteTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNote,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderNotes = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: test && test.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        boardTitle: boardTitle,\n        deleteNote: deleteNote,\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardInput\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setBoardTitle(e.target.value);\n        },\n        value: boardTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), renderNotes(), handleAddNote()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"0y5cVhH88jVlbT50HmCOQiIOQsc=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/components/board/Board.js"],"names":["React","useState","useEffect","Note","axios","BsPlus","Board","props","_id","title","content","board","boardTitle","setBoardTitle","noteTitle","setNoteTitle","test","setTest","fetchNotes","notes","get","data","createNote","newNote","post","patch","deleteNote","id","filteredNotes","filter","note","patchBoardTitle","handleAddNote","e","target","value","renderNotes","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Note from '../Note'\r\nimport './board.css'\r\nimport axios from 'axios'\r\nimport { BsPlus } from 'react-icons/bs'\r\n\r\nfunction Board(props) {\r\n    const { _id, title, content } = props.board\r\n\r\n    \r\n    const [boardTitle, setBoardTitle] = useState(title)\r\n    const [noteTitle, setNoteTitle] = useState()\r\n    const [test, setTest] = useState()\r\n\r\n    useEffect(() => {\r\n        const fetchNotes = async () => {\r\n            const notes = await axios.get(`/boards/${_id}`)\r\n            setTest(notes.data.content)\r\n        }\r\n        \r\n        fetchNotes()\r\n    }, [])\r\n\r\n    const createNote = async () => {\r\n        const newNote = await axios.post('/notes', {title: boardTitle})\r\n        await axios.patch(`/boards/createNote/${_id}`, { content: [...test, newNote.data] })\r\n    }\r\n\r\n    const deleteNote = async (id) => {\r\n        const filteredNotes = test.filter(note => note._id !== id)\r\n        await axios.patch(`/boards/createNote/${_id}`, { content: filteredNotes })\r\n        setTest(filteredNotes)\r\n    }\r\n\r\n    const patchBoardTitle = async () => {\r\n        await axios.patch(`/boards/updateTitle/${_id}`, { title: boardTitle })\r\n    }\r\n\r\n    const handleAddNote = () => {\r\n        return (\r\n            <div>\r\n\r\n                <form className='add-card__form'>\r\n                    <BsPlus />\r\n                    <input className='add-card__input' placeholder={'add card'} onChange={e => setNoteTitle(e.target.value)} />\r\n                    <button onClick={createNote} >add</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const renderNotes = () => {\r\n        return (\r\n            <div>\r\n                {test && test.map(note => <Note boardTitle={boardTitle} deleteNote={deleteNote} note={note} />)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='board' >\r\n            <div className='boardInput'>\r\n                <input onChange={(e) => { setBoardTitle(e.target.value) }} value={boardTitle} />\r\n            </div>\r\n            {renderNotes()}\r\n            {handleAddNote()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n"]},"metadata":{},"sourceType":"module"}