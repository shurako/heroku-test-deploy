{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\components\\\\Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Note.css';\nimport axios from 'axios';\nimport NoteDetails from './NoteDetails';\nimport { FaTrash } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Note(props) {\n  _s();\n\n  const {\n    _id,\n    title,\n    description\n  } = props.note;\n  const [note, setNote] = useState();\n  const [showDetails, setShowDetails] = useState(false);\n  const [noteDesc, setNoteDesc] = useState(''); // ***** EFFECTS\n\n  useEffect(() => {\n    setNote(props.note);\n    setNoteDesc(props.note.description);\n  }, []);\n  useEffect(() => {\n    const patchNote = async () => {\n      const notes = await axios.get(`boards/${props.boardId}`);\n      const updatedNotes = notes.data.content.map(item => {\n        if (item._id == note._id) {\n          return note;\n        } else return item;\n      });\n      await axios.patch(`/boards/createNote/${props.boardId}`, {\n        content: updatedNotes\n      });\n    };\n\n    note && patchNote();\n  }, [note]); //**** FUNCTIONS\n\n  const handleShowDetails = () => {\n    if (showDetails === true) return /*#__PURE__*/_jsxDEV(NoteDetails, {\n      fetchNotes: props.fetchNotes,\n      noteDesc: noteDesc,\n      setNoteDesc: setNoteDesc,\n      handlePatchDescription: handlePatchDescription,\n      boardId: props.boardId,\n      showDetails: showDetails,\n      setShowDetails: setShowDetails,\n      boardTitle: props.boardTitle,\n      setNote: setNote,\n      note: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 41\n    }, this);\n  };\n\n  const handlePatchDescription = async e => {\n    e.preventDefault();\n    const notes = await axios.get(`boards/${props.boardId}`);\n    const updatedNotes = notes.data.content.map(item => {\n      if (item._id == note._id) {\n        console.log('test');\n        setNote({ ...note,\n          description: noteDesc\n        });\n        return { ...note,\n          description: noteDesc\n        };\n      } else return item;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragCapture: console.log('drag'),\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => setShowDetails(!showDetails),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.deleteNote(_id);\n        },\n        children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), showDetails ? handleShowDetails() : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Note, \"UUjzcm8Jv2CXcj2FrKobRUaQpVk=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/components/Note.js"],"names":["React","useState","useEffect","axios","NoteDetails","FaTrash","Note","props","_id","title","description","note","setNote","showDetails","setShowDetails","noteDesc","setNoteDesc","patchNote","notes","get","boardId","updatedNotes","data","content","map","item","patch","handleShowDetails","fetchNotes","handlePatchDescription","boardTitle","e","preventDefault","console","log","deleteNote"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Note.css'\r\nimport axios from 'axios'\r\nimport NoteDetails from './NoteDetails'\r\nimport {FaTrash} from 'react-icons/fa'\r\n\r\n\r\nfunction Note(props) {\r\n    const {_id, title, description } = props.note\r\n    const [note, setNote] = useState()\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [noteDesc, setNoteDesc] = useState('')\r\n\r\n// ***** EFFECTS\r\n\r\n    useEffect(() => {\r\n        setNote(props.note);\r\n        setNoteDesc(props.note.description)\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const patchNote = async () => {\r\n            const notes = await axios.get(`boards/${props.boardId}`)\r\n            const updatedNotes = notes.data.content.map( item => {\r\n            if(item._id == note._id) { return note}\r\n            else return item\r\n        } )\r\n        await axios.patch(`/boards/createNote/${props.boardId}`, {content : updatedNotes})\r\n        }\r\n        \r\n       note && patchNote()\r\n    }, [note])\r\n\r\n\r\n    //**** FUNCTIONS\r\n    const  handleShowDetails = () => {\r\n        if(showDetails === true) return <NoteDetails fetchNotes = {props.fetchNotes} noteDesc ={noteDesc} setNoteDesc = {setNoteDesc} handlePatchDescription = {handlePatchDescription} boardId = {props.boardId} showDetails = {showDetails} setShowDetails = {setShowDetails} boardTitle = {props.boardTitle} setNote = {setNote} note = {note} />\r\n    }\r\n    const handlePatchDescription = async (e) => {\r\n        e.preventDefault()\r\n        const notes = await axios.get(`boards/${props.boardId}`)\r\n        const updatedNotes = notes.data.content.map( item => {\r\n            if(item._id == note._id) {console.log('test'); setNote({...note, description: noteDesc}); return {...note, description: noteDesc}}\r\n            else return item\r\n        } )\r\n    }\r\n   \r\n    \r\n    return (\r\n        <div onDragCapture = {console.log('drag')} className = 'note'>\r\n            <div   className = 'note__content'>\r\n                <input onClick = {() => setShowDetails(!showDetails)} value = {title} />\r\n                <button onClick = {() => {props.deleteNote(_id)}} ><FaTrash/></button>\r\n            </div>\r\n\r\n            {showDetails ? handleShowDetails() : ''}\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n"]},"metadata":{},"sourceType":"module"}