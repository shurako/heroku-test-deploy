{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Home.css';\nimport Board from '../components/board/Board';\nimport axios from 'axios';\nimport BottomBar from '../components/BottomBar/BottomBar';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nfunction Home() {\n  _s2();\n\n  const [boards, setBoards] = useState([]);\n  const [operation, setOperation] = useState(true);\n  const boardsRef = useRef();\n\n  const fetchBoards = async () => {\n    const boards = await axios.get('/boards');\n    setBoards(boards.data);\n  };\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    fetchBoards();\n  }, []);\n\n  const handleOnDragEnd = async result => {\n    console.log(result);\n    if (!result.destination) return;\n\n    if (result.source.droppableId !== result.destination.droppableId) {// const source = test.find(column => column.id == result.source.droppableId)\n      // const dest = test.find(column => column.id == result.destination.droppableId)\n      // const [removed] = source.data.splice(result.source.index, 1)\n      // dest.data.splice(result.destination.index, 0, removed)\n      // console.log(removed, dest, test[1])\n    } else {\n      // const source = test\n      // const [reorderedItem] = source.splice(result.source.index, 1)\n      // source.splice(result.destination.index, 0, reorderedItem)\n      // setBoard({\n      //     ...board, content: source\n      // })\n      const board = boards.find(board => board._id == result.source.droppableId);\n      const source = board.content;\n      const [reorderedItem] = source.splice(result.source.index, 1);\n      source.splice(result.destination.index, 0, reorderedItem);\n      const newArray = boards.map(item => {\n        if (board._id !== item._id) {\n          return item;\n        } else {\n          return { ...item,\n            content: source\n          };\n        }\n      });\n      console.log(newArray); // await axios.patch(`boards/createNote/${board._id}`, {content: source})\n\n      setBoards([...newArray]);\n    }\n  };\n\n  const renderBoards = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: forceUpdate,\n      ref: boardsRef,\n      className: \"boards__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => {\n          handleOnDragEnd(result);\n        },\n        children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n          boards: boards,\n          setBoards: setBoards,\n          board: board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [renderBoards(), /*#__PURE__*/_jsxDEV(BottomBar, {\n      boards: boards,\n      setBoards: setBoards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Home, \"fsfiPdkgwwpW3YagQtH7Iz+ipYc=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/pages/Home.js"],"names":["React","useState","useEffect","useRef","Board","axios","BottomBar","DragDropContext","useForceUpdate","value","setValue","Home","boards","setBoards","operation","setOperation","boardsRef","fetchBoards","get","data","forceUpdate","handleOnDragEnd","result","console","log","destination","source","droppableId","board","find","_id","content","reorderedItem","splice","index","newArray","map","item","renderBoards"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport './Home.css'\r\nimport Board from '../components/board/Board'\r\nimport axios from 'axios'\r\nimport BottomBar from '../components/BottomBar/BottomBar'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\n\r\nfunction useForceUpdate(){\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\n\r\nfunction Home() {\r\n    const [boards, setBoards] = useState([])\r\n    const [operation, setOperation] = useState(true)\r\n    const boardsRef = useRef()\r\n    const fetchBoards = async () => {\r\n        const boards = await axios.get('/boards')\r\n        setBoards(boards.data)\r\n    }\r\n    \r\n    const forceUpdate = useForceUpdate()\r\n\r\n    useEffect(() => { \r\n        fetchBoards()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const handleOnDragEnd =  async (result) => {\r\n        console.log(result)\r\n\r\n        if (!result.destination) return;\r\n        \r\n        if (result.source.droppableId !== result.destination.droppableId) {\r\n            // const source = test.find(column => column.id == result.source.droppableId)\r\n            // const dest = test.find(column => column.id == result.destination.droppableId)\r\n            // const [removed] = source.data.splice(result.source.index, 1)\r\n            // dest.data.splice(result.destination.index, 0, removed)\r\n            // console.log(removed, dest, test[1])\r\n         \r\n        }\r\n\r\n        else {\r\n            // const source = test\r\n            // const [reorderedItem] = source.splice(result.source.index, 1)\r\n            // source.splice(result.destination.index, 0, reorderedItem)\r\n            // setBoard({\r\n            //     ...board, content: source\r\n            // })\r\n\r\n\r\n            const board = boards.find(board => board._id == result.source.droppableId)\r\n            const source = board.content\r\n            const [reorderedItem] = source.splice(result.source.index, 1)\r\n            source.splice(result.destination.index, 0, reorderedItem)\r\n            const newArray = boards.map( item => {\r\n                if(board._id !== item._id) {return item}\r\n                else{ return {...item, content : source} }\r\n            }  )\r\n            console.log(newArray)\r\n            \r\n           // await axios.patch(`boards/createNote/${board._id}`, {content: source})\r\n            setBoards([...newArray])\r\n           \r\n            \r\n        }\r\n    }\r\n\r\n\r\n    const renderBoards = () => {\r\n        return <div onClick = {forceUpdate} ref = {boardsRef} className = 'boards__wrapper'>\r\n            <DragDropContext onDragEnd = {(result) => {handleOnDragEnd(result)}}>\r\n                {boards.map(board => <Board boards = {boards} setBoards = {setBoards} board = {board}/>)}\r\n            </DragDropContext>\r\n        </div>\r\n            \r\n        \r\n    }\r\n\r\n    return (\r\n        <div className = 'home'>\r\n            {renderBoards()}\r\n            <BottomBar boards = {boards} setBoards = {setBoards} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}