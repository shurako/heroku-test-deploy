{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\OneDrive\\\\Pulpit\\\\DB learn\\\\client\\\\app\\\\src\\\\components\\\\board\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Note from '../Note';\nimport './board.css';\nimport axios from 'axios';\nimport { BsPlus } from 'react-icons/bs';\nimport AddNoteForm from './AddNoteForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const {\n    _id,\n    title\n  } = props.board;\n  const [board, setBoard] = useState();\n  const [boardTitle, setBoardTitle] = useState(title);\n  const [noteTitle, setNoteTitle] = useState();\n  const [test, setTest] = useState();\n  const ref = useRef();\n\n  const fetchNotes = async () => {\n    const notes = await axios.get(`/boards/${_id}`);\n    setTest(notes.data.content);\n  };\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  useEffect(() => {\n    const patchBoard = async () => {\n      await axios.patch(`/boards/updateTitle/${_id}`, {\n        title: board.title\n      });\n    };\n\n    board && patchBoard();\n  }, [board]);\n\n  const createNote = async () => {\n    const newNote = await axios.post('/notes', {\n      title: noteTitle\n    });\n    const res = await axios.patch(`/boards/createNote/${_id}`, {\n      content: [...test, newNote.data]\n    });\n    setTest([...test, newNote.data]);\n  };\n\n  const deleteNote = async id => {\n    const filteredNotes = test.filter(note => note._id !== id);\n    await axios.patch(`/boards/createNote/${_id}`, {\n      content: filteredNotes\n    });\n    setTest(filteredNotes);\n  };\n\n  const patchBoardTitle = e => {\n    e.preventDefault();\n    setBoard({ ...board,\n      title: boardTitle\n    });\n  };\n\n  const renderNotes = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: test && test.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        boardId: _id,\n        boardTitle: boardTitle,\n        deleteNote: deleteNote,\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardInput\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => patchBoardTitle(e),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setBoardTitle(e.target.value);\n          },\n          value: boardTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), renderNotes(), /*#__PURE__*/_jsxDEV(AddNoteForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"5p3AwbTUVh9U+qduj2VwCwsuc4Y=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/patry/OneDrive/Pulpit/DB learn/client/app/src/components/board/Board.js"],"names":["React","useState","useEffect","useRef","Note","axios","BsPlus","AddNoteForm","Board","props","_id","title","board","setBoard","boardTitle","setBoardTitle","noteTitle","setNoteTitle","test","setTest","ref","fetchNotes","notes","get","data","content","patchBoard","patch","createNote","newNote","post","res","deleteNote","id","filteredNotes","filter","note","patchBoardTitle","e","preventDefault","renderNotes","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport Note from '../Note'\r\nimport './board.css'\r\nimport axios from 'axios'\r\nimport { BsPlus } from 'react-icons/bs'\r\nimport AddNoteForm from './AddNoteForm'\r\n\r\nfunction Board(props) {\r\n    const { _id, title, } = props.board\r\n    const [board, setBoard] = useState()\r\n    const [boardTitle, setBoardTitle] = useState(title)\r\n    const [noteTitle, setNoteTitle] = useState()\r\n    const [test, setTest] = useState()\r\n    const ref = useRef()\r\n    \r\n    const fetchNotes = async () => {\r\n        const notes = await axios.get(`/boards/${_id}`)\r\n        setTest(notes.data.content)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNotes()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const patchBoard = async () => {\r\n            await axios.patch(`/boards/updateTitle/${_id}`, {title : board.title} )\r\n        }\r\n\r\n        board && patchBoard()\r\n    }, [board])\r\n\r\n\r\n    const createNote = async () => {\r\n        \r\n        const newNote = await axios.post('/notes', {title: noteTitle})\r\n        const res = await axios.patch(`/boards/createNote/${_id}`, { content: [...test, newNote.data]})\r\n        setTest([...test, newNote.data])\r\n        \r\n    }\r\n\r\n    const deleteNote = async (id) => {\r\n        const filteredNotes = test.filter(note => note._id !== id)\r\n        await axios.patch(`/boards/createNote/${_id}`, { content: filteredNotes })\r\n        setTest(filteredNotes)\r\n    }\r\n\r\n    const patchBoardTitle =  (e) => {\r\n       \r\n        e.preventDefault()\r\n        setBoard({...board, title : boardTitle})\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    \r\n\r\n    const renderNotes = () => {\r\n        return (\r\n            <div>\r\n                {test && test.map(note => <Note boardId = {_id} boardTitle={boardTitle} deleteNote={deleteNote} note={note} />)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='board' >\r\n            <div className='boardInput'>\r\n                <form onSubmit={ e => patchBoardTitle(e) }>\r\n                    <input onChange={(e) => { setBoardTitle(e.target.value) }} value={boardTitle} />\r\n                </form>\r\n            </div>\r\n            {renderNotes()}\r\n            <AddNoteForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n"]},"metadata":{},"sourceType":"module"}